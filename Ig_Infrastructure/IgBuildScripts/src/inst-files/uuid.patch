### PATCH uuid
--- lib/uuid/gen_uuid.c	Mon Aug 18 16:48:29 2003
+++ ../../e2fsprogs-1.32/lib/uuid/gen_uuid.c	Fri May  9 17:47:11 2003
@@ -15,6 +15,11 @@
  */
 #define _SVID_SOURCE
 
+#ifdef _WIN32
+#define _WIN32_WINNT 0x0500
+#include <windows.h>
+#define UUID MYUUID
+#endif
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>
 #endif
@@ -25,11 +30,13 @@
 #include <fcntl.h>
 #include <errno.h>
 #include <sys/types.h>
-#include <sys/time.h>
 #include <sys/stat.h>
+#ifndef _WIN32
+#include <sys/time.h>
 #include <sys/file.h>
 #include <sys/ioctl.h>
 #include <sys/socket.h>
+#endif
 #ifdef HAVE_SYS_SOCKIO_H
 #include <sys/sockio.h>
 #endif
@@ -47,6 +54,38 @@
 #define rand() 		random()
 #endif
 
+#ifndef _WIN32
+typedef unsigned long long myulonglong;
+#else
+# ifdef _MSC_VER
+typedef unsigned __int64 myulonglong;
+# else
+typedef unsigned long long myulonglong;
+# endif
+
+static void gettimeofday (struct timeval *tv, void *dummy)
+{
+	FILETIME ftime;
+	myulonglong n;
+	GetSystemTimeAsFileTime (&ftime);
+	n = (((myulonglong) ftime.dwHighDateTime << 32)
+	     + (myulonglong) ftime.dwLowDateTime);
+	if (n)
+	{
+		n /= 10;
+		n -= ((369 * 365 + 89) * (myulonglong) 86400) * 1000000;
+	}
+
+	tv->tv_sec = n / 1000000;
+	tv->tv_usec = n % 1000000;
+}
+
+static int getuid (void)
+{
+	return 1;
+}
+#endif
+
 static int get_random_fd(void)
 {
 	struct timeval	tv;
@@ -55,9 +94,11 @@
 
 	if (fd == -2) {
 		gettimeofday(&tv, 0);
+#ifndef _WIN32
 		fd = open("/dev/urandom", O_RDONLY);
 		if (fd == -1)
 			fd = open("/dev/random", O_RDONLY | O_NONBLOCK);
+#endif
 		srand((getpid() << 16) ^ getuid() ^ tv.tv_sec ^ tv.tv_usec);
 	}
 	/* Crank the random number generator a few times */
@@ -103,6 +144,7 @@
  */
 static int get_node_id(unsigned char *node_id)
 {
+#ifndef _WIN32
 #ifdef HAVE_NET_IF_H
 	int 		sd;
 	struct ifreq 	ifr, *ifrp;
@@ -170,6 +212,7 @@
 	}
 	close(sd);
 #endif
+#endif
 	return 0;
 }
 
@@ -182,7 +225,7 @@
 	static struct timeval		last = {0, 0};
 	static __u16			clock_seq;
 	struct timeval 			tv;
-	unsigned long long		clock_reg;
+	myulonglong 			clock_reg;
 	
 try_again:
 	gettimeofday(&tv, 0);
@@ -209,8 +252,8 @@
 	}
 		
 	clock_reg = tv.tv_usec*10 + adjustment;
-	clock_reg += ((unsigned long long) tv.tv_sec)*10000000;
-	clock_reg += (((unsigned long long) 0x01B21DD2) << 32) + 0x13814000;
+	clock_reg += ((myulonglong) tv.tv_sec)*10000000;
+	clock_reg += (((myulonglong) 0x01B21DD2) << 32) + 0x13814000;
 
 	*clock_high = clock_reg >> 32;
 	*clock_low = clock_reg;
--- lib/uuid/uuid_time.c	Mon Aug 18 16:44:17 2003
+++ ../../e2fsprogs-1.32/lib/uuid/uuid_time.c	Sun Feb 24 22:04:00 2002
@@ -11,28 +11,42 @@
  * %End-Header%
  */
 
+#ifdef _WIN32
+#define _WIN32_WINNT 0x0500
+#include <windows.h>
+#define UUID MYUUID
+#endif
+
 #include <stdio.h>
+#ifndef _WIN32
 #include <unistd.h>
+#include <sys/time.h>
+#endif
 #include <stdlib.h>
 #include <sys/types.h>
-#include <sys/time.h>
 #include <time.h>
 
 #include "uuidP.h"
 
+#if defined _WIN32 && defined _MSC_VER
+typedef unsigned __int64 myulonglong;
+#else
+typedef unsigned long long myulonglong;
+#endif
+
 time_t uuid_time(const uuid_t uu, struct timeval *ret_tv)
 {
 	struct uuid		uuid;
 	__u32			high;
 	struct timeval		tv;
-	unsigned long long	clock_reg;
+	myulonglong		clock_reg;
 
 	uuid_unpack(uu, &uuid);
 	
 	high = uuid.time_mid | ((uuid.time_hi_and_version & 0xFFF) << 16);
-	clock_reg = uuid.time_low | ((unsigned long long) high << 32);
+	clock_reg = uuid.time_low | ((myulonglong) high << 32);
 
-	clock_reg -= (((unsigned long long) 0x01B21DD2) << 32) + 0x13814000;
+	clock_reg -= (((myulonglong) 0x01B21DD2) << 32) + 0x13814000;
 	tv.tv_sec = clock_reg / 10000000;
 	tv.tv_usec = (clock_reg % 10000000) / 10;
 
--- lib/uuid/tst_uuid.c	2002-07-16 05:50:03.000000000 +0200
+++ ../../externals/src/e2fsprogs-1.32/lib/uuid/tst_uuid.c	2003-07-02 12:16:12.000000000 +0200
@@ -9,8 +9,13 @@
  * %End-Header%
  */
 
-#include <stdio.h>
+#ifdef _WIN32
+#define _WIN32_WINNT 0x0500
+#include <windows.h>
+#define UUID MYUUID
+#endif
 
+#include <stdio.h>
 #include "uuid.h"
 
 static int test_uuid(const char * uuid, int isValid)
--- lib/uuid/uuid.h	2002-02-24 22:04:00.000000000 +0100
+++ ../../externals/src/e2fsprogs-1.32/lib/uuid/uuid.h	2003-07-02 11:47:45.000000000 +0200
@@ -13,7 +13,9 @@
 #define _UUID_UUID_H
 
 #include <sys/types.h>
+#ifndef _WIN32
 #include <sys/time.h>
+#endif
 #include <time.h>
 
 typedef unsigned char uuid_t[16];

