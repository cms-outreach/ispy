--- examples/load_file.cc.orig	Sat Nov 15 17:54:34 2003
+++ examples/load_file.cc	Sat Nov 15 17:55:09 2003
@@ -17,7 +17,7 @@
   Connection con(use_exceptions);
 	try {
 		con.real_connect (MY_DATABASE,MY_HOST,MY_USER,MY_PASSWORD,3306,(int)0,60,NULL);
-		Query query = con.query(); ostrstream strbuf;
+		Query query = con.query(); std::ostringstream strbuf;
 		std::ifstream In (argv[1],ios::in | ios::binary); struct stat for_len;
 		if ((In.rdbuf())->is_open()) {
 			if (stat (argv[1],&for_len) == -1) return -1;
--- examples/updel_x_.cc.orig	Sat Nov 15 17:52:55 2003
+++ examples/updel_x_.cc	Sat Nov 15 17:53:26 2003
@@ -12,7 +12,7 @@
 int  main (void) {
   Connection con(use_exceptions);
 	try {
-		ostrstream strbuf; unsigned int i=0; 
+		std::ostringstream strbuf; unsigned int i=0; 
 		con.real_connect (MY_DATABASE,MY_HOST,MY_USER,MY_PASSWORD,3306,(int)0,60,NULL);
 		Query query = con.query(); (std::ostream&)query << MY_QUERY;
 		ResUse res = query.use(); Row row; 
--- sqlplusint/datetime1.hh.orig	Sat Nov 15 17:26:23 2003
+++ sqlplusint/datetime1.hh	Sat Nov 15 17:27:18 2003
@@ -9,8 +9,8 @@
 #define __datetime1_hh__
 
 #include <string>
-#include <strstream.h>
-#include <iostream.h>
+#include <sstream>
+#include <iostream>
 #include "defs"
 #include "define_short"
 #include "coldata1.hh"
--- sqlplusint/sql_query.cc.orig	Sat Nov 15 17:45:15 2003
+++ sqlplusint/sql_query.cc	Sat Nov 15 17:46:57 2003
@@ -33,16 +33,9 @@
   def.clear(); clear();
 }
 
-char * SQLQuery::preview_char() {
+std::string SQLQuery::preview_char() {
   *this << std::ends;
-#ifdef __USLC__
-  strstreambuf *tmpbuf = rdbuf();
-  uint length = tmpbuf->pcount();
-#else
-  uint length = pcount();
-#endif
-  char *s = new char[length+1]; 
-  get(s, length, '\0'); 
+  std::string s = str ();
   seekg (0,std::ios::beg);
   seekp (-1,std::ios::cur);
   return s;
@@ -99,18 +92,10 @@
   SQLQuery *const_this = const_cast<SQLQuery *>(this);
   if (!parsed.empty()) const_this->proc(const_cast<SQLQueryParms&>(p));
   *const_this << std::ends;
-#ifdef __USLC__
-  strstreambuf *tmpbuf = const_this->rdbuf();
-  uint length = tmpbuf->pcount() + 1;
-  char *s = new char[length]; 
-#else
-  uint length = const_this->pcount() + 1;
-  char s[length]; 
-#endif
-  const_this->get(s, length, '\0'); 
+  std::string s = const_this->str ();
   const_this->seekg (0,std::ios::beg);
   const_this->seekp (-1,std::ios::cur);
-  return std::string(s);
+  return s;
 }
 
 std::string SQLQuery::str(const SQLQueryParms &p, query_reset r) {
@@ -135,8 +120,9 @@
   long int n;
   char option;
   std::string name;
-  char *s, *s0;
-  s0 = s = preview_char();
+  std::string s0 = preview_char ();
+  const char *s;
+  s = s0.c_str ();
   while (*s) {
     if (*s == '%') {
       s++;
@@ -187,6 +173,5 @@
     }
   }
   parsed.push_back( SQLParseElement(str,' ',-1) );
-  delete[] s0;
 }
 
--- sqlplusint/sql_query1.hh.orig	Sat Nov 15 17:25:12 2003
+++ sqlplusint/sql_query1.hh	Sat Nov 15 17:47:20 2003
@@ -1,7 +1,7 @@
 #ifndef __sql_query_1_hh
 #define __sql_query_1_hh
 
-#include <strstream.h>
+#include <sstream>
 #include <vector>
 #include <map>
 #include "define_short"
@@ -107,10 +107,10 @@
 // your query before you try to use any of the *SQLQuery* specific
 // methods except for *error()* and *success()*.
 
-class SQLQuery : public strstream { 
+class SQLQuery : public std::stringstream { 
   friend class SQLQueryParms;
 private:
-  char* preview_char();
+  std::string preview_char();
 protected:
   bool    Success;
   char*   errmsg;
--- sqlplusint/stream2string3.hh.orig	Sat Nov 15 17:28:28 2003
+++ sqlplusint/stream2string3.hh	Sat Nov 15 17:30:00 2003
@@ -1,20 +1,14 @@
 #ifndef __stream2string3_hh__
 #define __stream2string3_hh__
 
-#include <strstream.h>
+#include <sstream>
 
 template<class Strng, class T>
 Strng stream2string(const T &object) {
-  ostrstream str;
+  std::ostringstream str;
   object.out_stream(str);
   str << ends;
   Strng s = str.str();
-#ifdef __USLC__
-  strstreambuf *tmpbuf = str.rdbuf();
-  tmpbuf->freeze(0);
-#else
-  str.freeze(0);
-#endif
   return s;
 }
 
