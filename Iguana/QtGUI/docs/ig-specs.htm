<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">
<head>
<title>iSpy | A powerful and lightweight event display.</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="shortcut icon" href="favicon.ico" type="image/x-icon" />
<link type="text/css" rel="stylesheet" media="all" href="some.css" />
<link type="text/css" rel="stylesheet" media="all" href="ispy.css" />
<script type="text/javascript" src="common.js"></script>
<!--[if lt IE 7]>
<script language="JavaScript">window.attachEvent("onload", correctPNG);</script>
<![endif]-->
</head>




<body class="sidebar-right">

<!-- Start of main page ========================================== --> 

<!-- tpl: page-default -->





<div id="page" class="ispy">

   <!-- Start of header  ========================================== --> 

   <div id="page_top">
      <div id="logo">
         <a href="index.htm">
            <img src="images/lizard-icon-very-small.png" alt="iSpy Home"/> iSpy home
         </a>
      </div>
      <h1>
         <a href="index.htm">iSpy</a>
         <small>ig file format.</small>
      </h1>
      <p>
         <div class="tm"></div><img class="tr" src="images/rounded_tr.png" alt="rounded border"/>
      </p>                   
   </div>

   <!-- End of header ========================================== --> 

   <div id="page_content">
      <div class="ccolumn narrow">
         <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.2.6/jquery.min.js"></script> 
         <script type="text/javascript" src="fancyzoom.min.js"></script>
         <script type="text/javascript">
            $(document).ready(function() {
               $('#screenshots a').fancyZoom({scaleImg: true, closeOnClick: true, directory: 'images/fancyzoom'});
            });
         </script>

   <!-- Start of main body ========================================== --> 
   
   <h1><em>ig-file</em> format:</h1>

   <p>Ig Files are simple <code>.zip</code> files with a flat directory structure with a separate directory per run (<em>run
   directory</em>). Each <em>run directory</em> contains one or more files describing a given event (<em>ig event file</em>)
   each. The associated run number and the event number are, respectively, the filename for the <em>run
   directory</em> and for the <em>ig event file</em>.</p>

   <h1><em>ig-event-file</em> format.</h1>

   <p>The <em>ig-event-file</em> format is a valid JSON or python dictionary. The format defines three categories of
   objects:
   <em>types</em>, <em>collections</em> and <em>associations-sets</em>.</p>

   <p>Syntax:</p>

   <p><em>ig-event-file</em> ::= <strong>{</strong>
       <strong>'Types':</strong> <em>type-descriptions</em><strong>,</strong>
       <strong>'Collections':</strong> <em>collections</em><strong>,</strong>
       <strong>'Associations':</strong> <em>association-sets</em>
     <strong>}</strong></p>

   <h2><em>Types</em></h2>

   <p><em>Type</em>s are a mapping of a <em>type-name</em> and its associated <em>type-description</em>.
   The <em>type-description</em> defines the types of the objects that are to be found in
   the <em>Collection</em> which uses the same string as the <em>type-name</em> to be identified.
   The <em>attributes</em> (i.e. columns) of a <em>Collection</em> are defined by an
   <em>attribute name</em> and an <em>attribute type</em>. The former is just a string label,
   while the second one define the kind of object which is stored in the attribute,
   all of which have a C++ equivalent.
   Possible <em>attribute type</em>s include:</p>

   <ul>
   <li>simple numeric types: <em>int</em>, <em>double</em>, which map to their C++ equivalents.</li>
   <li>text-like elements: <em>string</em>, which map to <code>std::string</code></li>
   <li>vector like quantities: <em>v2d</em>, <em>v3d</em>, <em>v4d</em> which map to <code>IgV2d</code>, <code>IgV3d</code>, <code>IgV4d</code>.</li>
   </ul>

   <p>Syntax:</p>

   <p><em>type-descriptions</em> ::= <strong>{</strong> <em>type-description</em><strong>,</strong> ... <strong>}</strong></p>

   <p><em>type-description</em> ::= <strong>"</strong><em>type-name</em><strong>": [</strong><em>attributes-description</em><strong>, ...]</strong></p>

   <p><em>type-name</em> ::= <em>string-literal</em></p>

   <p><em>attribute-description</em> ::= <strong>["</strong><em>attribute-name</em><strong>", "</strong><em>attribute-type</em><strong>"]</strong></p>

   <p><em>attribute-name</em> ::= <em>string-literal</em></p>

   <p><em>string-literal</em> ::= [A-Za-z_][A-Za-z_/0-9]*</p>

   <p><em>attribute-type</em> ::= <strong>int</strong> OR <strong>double</strong> OR <strong>string</strong> OR <strong>v2d</strong> OR <strong>v3d</strong> OR <strong>v4d</strong></p>

   <h2><em>Collection</em>s</h2>

   <p><em>Collections</em> are arrays of <em>row</em>s, identified by a <em>collection-name</em>.
   The <em>collection-name</em> is a <em>string-literal</em> which matches one of the
   <em>type-name</em>s defined in <em>types</em>.
   <em>Row</em>s are arrays of <em>value</em>s, where the type of the <em>value</em> matches the <em>attribute-type</em>
   of the <em>attribute-description</em> with the same position in the <em>type-description</em>
   which has its <em>type-name</em> matching the collection name.</p>

   <p>This is the actual data contained in a file.</p>

   <p>Syntax:</p>

   <p><em>collections</em> ::= <strong>{</strong><em>collection</em><strong>,</strong> ... <strong>}</strong></p>

   <p><em>collection</em> ::= <strong>"</strong><em>type-name</em><strong>": [</strong><em>row</em><strong>,</strong> ...<strong>]</strong></p>

   <p><em>row</em> ::= <strong>[</strong> <em>value</em><strong>,</strong> ...<strong>]</strong></p>

   <p><em>value</em> ::= <em>string-literal</em> OR <em>numeric-literal</em> OR <em>vector-literal</em></p>

   <p><em>numeric-literal</em> ::= [0-9]+[.]*[0-9]*</p>

   <p><em>vector-literal</em> ::= <strong>(</strong><em>numeric-literal</em><strong>,</strong> <em>numeric-literal</em><strong>,</strong> ...<strong>)</strong></p>

   <h2><em>Association sets</em></h2>

   <p>An <em>association</em> defines a relationship between two <em>row</em>s found in any (possibly the same)
   <em>collection</em>s. They are uniquely identified by two couples of numbers, the first one uniquely identifying
   the <em>left object</em> of the association, the other identifying the <em>right object</em>. The first element of this
   couple of numbers is the so called <em>collection id</em> while the second one is called <em>object id</em>.
   The <em>collection id</em> is the index of the <em>collection</em> type within the <em>Types</em> table, while the <em>object id</em> is
   the index of the object within the collection. Such a couple of numbers is called <em>object reference</em>.
   An <em>association-set</em> is an array of <em>association</em>s which share some common meaning decided by the
   writer of the ig-file.</p>

   <p>Syntax:</p>

   <p><em>associations-sets</em> ::= <strong>{</strong> <em>association-set</em><strong>,</strong> ... <strong>}</strong></p>

   <p><em>association-set</em> ::= <strong>"</strong><em>association-set-name</em><strong>":</strong> <strong>[</strong><em>association</em>, ...<strong>]</strong></p>

   <p><em>association</em> ::= <strong>[</strong><em>left-object</em><strong>,</strong> <em>right-object</em><strong>]</strong></p>

   <p><em>left-object</em> ::= <em>object-reference</em></p>

   <p><em>right-object</em> ::= <em>object-reference</em></p>

   <p><em>object-reference</em> ::= <strong>[</strong><em>collection-id</em><strong>,</strong> <em>object-id</em><strong>]</strong></p>

   <p><em>collection-id</em> ::= <em>index-literal</em></p>

   <p><em>object-id</em> ::= <em>index-literal</em></p>

   <p><em>index-literal</em> ::= [0-9]+</p>

   <h2><em>Examples</em>:</h2>

   <p>Here is a simple example of how an <code>ig</code> file looks like.</p>

   <pre><code>{'Types': {"Tracks/V1": [["x", "double"],["y", "double"],["z", "double"],
                            ["px", "double"],["py","double"],["pz", "double"]],
              "Clusters/V1": [["x", "double"],["y", "double"],["z", "double"],
                              ["e", "double"]]
   },
   'Collections': {"Tracks/V1": [[0, 0, 0, 0, 0, 0],
                                 [1, 1, 1, 1, 1, 1],
                                 [2, 2, 2, 2, 2, 2],
                                 [3, 3, 3, 3, 3, 3],
                                 [4, 4, 4, 4, 4, 4],
                                 [5, 5, 5, 5, 5, 5],
                                 [6, 6, 6, 6, 6, 6],
                                 [7, 7, 7, 7, 7, 7],
                                 [8, 8, 8, 8, 8, 8],
                                 [9, 9, 9, 9, 9, 9]
                                ],
                   "Clusters/V1": [[0, 0, 0, 0],
                                  [1, 1, 1, 1],
                                  [2, 2, 2, 2],
                                  [3, 3, 3, 3],
                                  [4, 4, 4, 4],
                                  [5, 5, 5, 5],
                                  [6, 6, 6, 6],
                                  [7, 7, 7, 7],
                                  [8, 8, 8, 8],
                                  [9, 9, 9, 9]
                                 ]
                   },
   'Associations': {"TrackClusters/V1": [[[0, 0], [1, 0]],
                                         [[0, 1], [1, 1]],
                                         [[0, 2], [1, 2]],
                                         [[0, 3], [1, 3]],
                                         [[0, 4], [1, 4]],
                                         [[0, 5], [1, 5]],
                                         [[0, 6], [1, 6]],
                                         [[0, 7], [1, 7]],
                                         [[0, 8], [1, 8]],
                                         [[0, 9], [1, 9]]
                                        ],
                    "TrackClusters2/V1": [[[0, 0], [1, 0]],
                                          [[0, 1], [1, 0]],
                                          [[0, 2], [1, 0]],
                                          [[0, 3], [1, 0]],
                                          [[0, 4], [1, 0]],
                                          [[0, 5], [1, 0]],
                                          [[0, 6], [1, 0]],
                                          [[0, 7], [1, 0]],
                                          [[0, 8], [1, 0]],
                                          [[0, 9], [1, 0]]
                                         ]
                   }
   }
   </code></pre>


 
   <p></p> <!-- small vertical space -->

</div>

<!-- End of main page ========================================== --> 

         

<!-- Start of right column ========================================== --> 
              
<div class="rcolumn"> 

</div> <!-- /rcolumn -->

                                
<div class="clear">
</div>

</div> <!-- /page_content -->

<div class="clear"></div>
</div>


<script src="/mint/?js" type="text/javascript"></script>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-9332242-1");
pageTracker._trackPageview();
} catch(err) {}</script>
</body>
</html>
